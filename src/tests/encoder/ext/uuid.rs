use std::str::FromStr;

use uuid::Uuid;

use crate::Encoder;


#[test]
fn test_uuid() {
    let buf: Vec<u8> = vec![];
    let mut writer = Encoder::new(buf);

    assert!(writer.write_uuid(Uuid::from_str("1d662762-2010-11e9-ad8b-c869cdb5cd46").unwrap()).is_ok());
    assert!(writer.write_uuid(Uuid::from_str("e11b8974-5245-4eca-a06b-a9a440074131").unwrap()).is_ok());

    let expected = vec![
        0x00, 0x00, 0x00, 0x10, 0x1d, 0x66, 0x27, 0x62, 0x20, 0x10, 0x11, 0xe9, 0xad, 0x8b, 0xc8, 0x69, 0xcd, 0xb5, 0xcd, 0x46,
        0x00, 0x00, 0x00, 0x10, 0xe1, 0x1b, 0x89, 0x74, 0x52, 0x45, 0x4e, 0xca, 0xa0, 0x6b, 0xa9, 0xa4, 0x40, 0x07, 0x41, 0x31,
    ];

    assert_eq!(&expected, writer.get_ref());
}

